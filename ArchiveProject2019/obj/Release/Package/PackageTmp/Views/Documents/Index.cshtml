@model IEnumerable<ArchiveProject2019.Models.Document>
@using ArchiveProject2019.HelperClasses
@using ArchiveProject2019.Models
@using Microsoft.AspNet.Identity;
@using System.Linq;
@using System.Data.Entity;
@using System.Collections.Generic;
@using ArchiveProject2019.Resources

@{
    ViewBag.Title = main_lang.AllDocuments;
    Layout = "~/Views/Shared/_DashBoardLayout.cshtml";
    string CurrentUserId = this.User.Identity.GetUserId();
    ApplicationDbContext db = new ApplicationDbContext();

    List<FavouriteForms> UserFavoriteFormId = new List<FavouriteForms>();
    List<int> UserFormId = UsersDepartmentAndGroupsForms.GetUsersForms(CurrentUserId).Select(a => a.Id).ToList();
    UserFavoriteFormId = db.FavouriteForms.Where(a => a.UserId.Equals(CurrentUserId) && UserFormId.Contains(a.FormId)).Include(a => a.Form).ToList();
}

@if (ViewBag.Msg != null)
{


    if (ViewBag.Msg == "RemoveRateSuccess")
    {
        <div class="alert alert-warning enterRemove" style="text-align:center;font-size:larger">
            <span class="glyphicon glyphicon-bell">

            </span>
@main_lang.RemoveRelateSuccess
        </div>
    }
    if (ViewBag.Msg == "ErrorOperation")
    {
<div class="alert alert-warning enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.OperationError
</div>
    }
    if (ViewBag.Msg == "CreateError")
    {
<div class="alert alert-warning enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.CreateError
</div>
    }


    if (ViewBag.Msg == "CreateSuccess")
    {
<div class="alert alert-info enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.CreateSuccess
</div>
    }


    if (ViewBag.Msg == "EditSuccess")
    {
<div class="alert alert-success enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.EditSuccess
</div>
    }

    if (ViewBag.Msg == "EditError")
    {
<div class="alert alert-warning enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.EditError
</div>
    }


    if (ViewBag.Msg == "DeleteError")
    {
<div class="alert alert-warning enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.DeleteError
</div>
    }
    if (ViewBag.Msg == "DeleteSuccess")
    {
<div class="alert alert-danger enterRemove" style="text-align:center;font-size:larger">
    <span class="glyphicon glyphicon-bell">

    </span>
    @main_lang.DeleteSuccess

</div>
    }



}



<div class="col-md-12">
    <div class="x_panel">
        <div class="x_title">
            <h2>@main_lang.DocAddOptions</h2>
            <ul class="nav navbar-right panel_toolbox">
                @*<li>
                        <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                    </li>*@


            </ul>
            <div class="clearfix"></div>
        </div>
        <div class="x_content">

            <p>

                <a href="@Url.Action("Create","Documents", new {docId=-1,IsReplay=false,Standard=0 })" title="@main_lang.DocAddStandardDoc" class="btn btn-default"> @main_lang.DocAddStandardDoc</a>
                <a href="@Url.Action("Create","Documents", new {docId=-1,IsReplay=false,Standard=0,IsGeneralize=true })" title=" @main_lang.DocAddGeneralizedDoc" class="btn btn-default"> @main_lang.DocAddGeneralizedDoc</a>


                @foreach (var formId in UserFavoriteFormId)
                {

                    <a href="@Url.Action("Create", "Documents", new { docId = -1, IsReplay = false, Standard = formId.FormId })" title="@formId.Form.Name" class="btn btn-default">@formId.Form.Name</a>
                }
            <button title=" @main_lang.AddNew" id="btnNewModel" class="btn btn-primary"> @main_lang.AddNew</button>

                <button title=" @main_lang.Refreshutton" id="btnRefreshModel" class="btn btn-default glyphicon glyphicon-refresh"></button>

            </p>


        </div>
    </div>
</div>


<div class="col-md-12">
    <div class="x_panel">
        <div class="x_title">
            <h2> @main_lang.DocSerachOption</h2>
            <ul class="nav navbar-right panel_toolbox">
                <li>
                    <a class="collapse-link"><i class="fa fa-chevron-up"></i></a>
                </li>


            </ul>
            <div class="clearfix"></div>
        </div>

        <div class="x_content">







            @using (Ajax.BeginForm(new AjaxOptions() { HttpMethod = "POST", UpdateTargetId = "TID", InsertionMode = InsertionMode.Replace }))
            {


                <div class="row">

                    <div class="col-md-3">

                        @Html.Label(main_lang.DocumentNumber, htmlAttributes: new { @class = "control-label" })

                        <input type="text" placeholder="@(main_lang.DocumentNumber+".......") " name="DocumentNumber" class="form-control" />


                    </div>


                    <div class="col-md-3">

                        @Html.Label(main_lang.FormId, htmlAttributes: new { @class = "control-label" })

                        @Html.DropDownList("DocumentForm", ViewBag.Forms as SelectList, main_lang.ChhooseForm, new { @class = "form-control", @id = "FormIdToggle" })


                    </div>

                    <div id="ExtraFieldsPlace"></div>

                    <div class="col-md-3">

                        @Html.Label(main_lang.KindId, htmlAttributes: new { @class = "control-label" })

                        @Html.DropDownList("DocumentKind", ViewBag.Kinds as SelectList, main_lang.ChooseKind, new { @class = "form-control" })


                    </div>

                    <div class="col-md-3">

                        @Html.Label(main_lang.TypeMailId, htmlAttributes: new { @class = "control-label" })

                        @Html.DropDownList("DocumentMail", ViewBag.MailType as SelectList, main_lang.ChooseTypemail, new { @class = "form-control" })


                    </div>










                    @*</div>

                        <div class="row">*@

                    <div class="col-md-3">

                        @Html.Label(main_lang.DocStartDate, htmlAttributes: new { @class = "control-label" })

                        <input class="form-control" type="text" onfocusin="(this.type='date')" onfocusout="(this.type='text')" placeholder="من تاريخ الوثيقة" name="DocFirstDate" id="DocFirstDate">
                    </div>


                    <div class="col-md-3">

                        @Html.Label(main_lang.DocEndDate, htmlAttributes: new { @class = "control-label" })

                        <input class="form-control" type="text" onfocusin="(this.type='date')" onfocusout="(this.type='text')" placeholder="الى تاريخ الوثيقة" name="DocEndDate" id="DocEndDate">
                    </div>







                    @*</div>



                        <div class="row">*@



                    <div class="col-md-3">

                        @Html.Label(main_lang.RowsCount, htmlAttributes: new { @class = "control-label" })

                        <select name="RetrievalCount" class="form-control chosen-select">
                            <option value="10">10</option>
                            <option value="25">25</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>


                    </div>

                    <div class="col-md-3">
                        @Html.Label(main_lang.ViewDocumentType, htmlAttributes: new { @class = "control-label" })
                        <select name="DocumentModel" class="form-control chosen-select">
                            <option selected="selected" value="1"> @main_lang.ViewDocTypeMyCreatedDoc</option>
                            <option value="7">@main_lang.ViewDocTypeMyDepartmentDoc</option>



                            <option value="3">@main_lang.ViewDocTypeDocumentToMyDepartment</option>
                            <option value="8">@main_lang.ViewDocTypeDocumentToMe</option>
                            <option value="4">@main_lang.ViewDocTypeDocumentToMyGroups</option>
                            <option value="5"> @main_lang.ViewDocTypeAllDocuments</option>


                            <option disabled="disabled"> ---------------------</option>


                            <option value="2">@main_lang.ViewDocTypeAllNotificationDocument</option>
                            <option value="6">  @main_lang.ViewDocTypeTodayNotificationDoc</option>
                            <option value="14">  @main_lang.ViewDocTypeGeneralizedNotificationDoc</option>

                            <option disabled="disabled"> ---------------------</option>
                            <option value="9">  @main_lang.ViewDocTypeMyCreatedGeneralizedDoc</option>
                            <option value="10">@main_lang.ViewDocTypeMyDepartmentGeneralizedDoc</option>
                            <option value="11"> @main_lang.ViewDocTypeGeneralizedDocumentToMyGroups</option>
                            <option value="12"> @main_lang.ViewDocTypeGeneralizedDocumentToMyDepartment</option>
                            <option value="13">@main_lang.ViewDocTypeGeneralizedDocumentToMe</option>






                        </select>


                    </div>



                    <div class="col-md-3">
                        @Html.Label(main_lang.OrderByType, htmlAttributes: new { @class = "control-label" })

                        <select name="OrderBY" class="form-control chosen-select">
                            <option value="1">@main_lang.OrderByDocNumber</option>
                            <option value="2"> @main_lang.OrderByDocSubject</option>
                            <option selected="selected" value="3"> @main_lang.OrderBYDocCreateDate</option>
                            <option value="4"> @main_lang.OrderByDocDate</option>


                        </select>


                    </div>
                </div>
                <div class="row">
                    <div class="col-md-9">

                        @Html.Label(main_lang.Subject, htmlAttributes: new { @class = "control-label" })

                        <input type="text" placeholder="@(main_lang.Subject+"....")" name="DocumentSubject" class="form-control" />


                    </div>

                    <div class="col-md-3">
                        @Html.Label(main_lang.OrderBy, htmlAttributes: new { @class = "control-label" })

                        <select name="OrderType" id="RetrievalCount" class="form-control chosen-select">
                            <option value="1">@main_lang.OrderASC</option>
                            <option selected="selected" value="2">@main_lang.OrderDesc</option>
                        </select>
                    </div>





                </div>
                <br />


                <div class="row">
                    <input type="submit" value="@main_lang.SearchBtn" class="btn btn-success" />
                </div>


            }



        </div>
    </div>
</div>

<br />
<hr />

@Html.Partial("_StartView")
<div id="TID" style="margin-bottom:200px">


    <table id="form" class="table table-striped  table-hover" style="text-align:center;font-size:12px">
        <thead>
            <tr>


                <th>
                    @Html.DisplayNameFor(model => model.DepartmentId)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.DocumentNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Subject)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.CreatedAt)
                </th>

                <th>
                    @Html.DisplayNameFor(model => model.DocumentDate)
                </th>
                <th>
                    @Html.DisplayName(main_lang.Operations)
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
            <tr>



                <td>
                    @Html.DisplayFor(modelItem => item.Department.Name)
                </td>
                <td>

                    <a title="@main_lang.DocumentDetails" href="@Url.Action("Details",new { Id=item.Id})">@item.DocumentNumber</a>
                </td>

                <td>
                    <a title="@main_lang.DocumentDetails" href="@Url.Action("Details",new { Id=item.Id})">@item.Subject</a>


                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.CreatedAt)
                </td>


                <td>
                    @Html.DisplayFor(modelItem => item.DocumentDate)
                </td>
                <td>


                    @if (!item.IsGeneralize)
                    {


                        <div class="btn-group" role="group">
                            <button type="button" class="btn btn-sm btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                @main_lang.RelateOptions
                                <span class="caret"></span>
                            </button>
                            <ul class="dropdown-menu">

                                @if (DocumentOperation.DocumentCanRelate(CurrentUserId, item.Id))
                                {
                                    <li>
                                        <a href="#" data-form-id="@item.Id" title=" @main_lang.RelatewithNewDoc" class="btn-link js-relate btn-sm">      @main_lang.RelatewithNewDoc</a>
                                    </li>

                                    <li>
                                        <a href="@Url.Action("Relate", "Documents", new { id = item.Id })" title="@main_lang.RelateWithDoc" class="btn-link  btn-sm">      @main_lang.RelateWithDoc</a>
                                    </li>

                                }


                                @if (DocumentOperation.DocumentCanSeal(CurrentUserId, item.Id))
                                {

                                    <li>
                                        <a href="@Url.Action("Create", "Seals", new { id = item.Id, IsCipher = ArchiveProject2019.Security.ManagedAes.IsCipher })" title="@main_lang.DocumentCreateSeal" class="btn-link  btn-sm">@main_lang.DocumentCreateSeal</a>
                                    </li>
                                }
                                <li>


                                    @if (DocumentOperation.DocumentRemoveParent(CurrentUserId, item.Id) == true)
                                    {
                                    <li>

                                        <a href="#" data-form-id="@item.Id" title=" @main_lang.RemoveChildRate" class="btn-link js-RemoveRelateParent btn-sm">@main_lang.RemoveParentRate  </a>

                                    </li>
                                }



                                    @if (DocumentOperation.DocumentRemoveChild(CurrentUserId, item.Id) == true)
                                    {
                                        <li>

                                            <a href="#" data-form-id="@item.Id" title=" @main_lang.RemoveParentRate" class="btn-link js-RemoveRelateChild btn-sm">@main_lang.RemoveChildRate </a>


                                        </li>
                                    }


                                    @if (DocumentOperation.DocumentCanSeal(CurrentUserId, item.Id))
                                    {
                                        <li>
                                            <a href="@Url.Action("Index", "Seals", new { id = item.Id, IsCipher = ArchiveProject2019.Security.ManagedAes.IsCipher })" title="@main_lang.MyDocumentSeals" class="btn-link  btn-sm">@main_lang.MyDocumentSeals</a>


                                        </li>
                                    }


                                    <li>
                                        <a href="@Url.Action("AllIndex", "Seals", new { id = item.Id, IsCipher = ArchiveProject2019.Security.ManagedAes.IsCipher })" title="@main_lang.DocumentSealsView" class="btn-link  btn-sm">@main_lang.DocumentSealsView</a>


                                    </li>

                                    @if (DocumentOperation.DocumentCanReplay(CurrentUserId, item.Id))
                                    {

                                        <li>

                                            <a href="#" data-form-id="@item.Id" title="@main_lang.ReplayDocument" class="btn-link js-replay btn-sm">@main_lang.DocCanReplayButton</a>

                                        </li>

                                    }
                                    <li>

                                        <a href="@Url.Action("GetRelatedDocument", "Documents", new { id = item.Id })" title="@main_lang.RelatedDocuments" class="btn-link  btn-sm">@main_lang.RelatedDocuments</a>

                                    </li>
                                    <li>

                                        <a href="@Url.Action("GetReplayDocument", "Documents", new { id = item.Id })" title="@main_lang.ReplayedDocuments" class="btn-link  btn-sm">@main_lang.ReplayedDocuments</a>

                                    </li>




                                </ul>
                            </div>


                        }
                    <div class="btn-group" role="group">
                        <button type="button" class="btn btn-sm btn-primary dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            @main_lang.MoreOptions
                            <span class="caret"></span>
                        </button>
                        <ul class="dropdown-menu">



                            @if (item.IsGeneralize == true)
                            {
                                <li>

                                    <a href="@Url.Action("Details", "Documents", new { id = item.Id })" title="@main_lang.DocumentDetails" class="btn-link js-Details  btn-xs">@main_lang.DocumentDetails</a>

                                </li>






                                if (DocumentOperation.GeneralizedDocumentCanDeleteOrEdit(CurrentUserId, item.Id) == true)
                                {
                                    <li>

                                        <a href="#" data-form-id="@item.Id" title="@main_lang.DocumentDelete" class="btn-link js-Delete btn-sm"> @main_lang.DocumentDelete </a>



                                    </li>
                                }




                                if (DocumentOperation.GeneralizedDocumentCanDeleteOrEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentDepartments", new { id = item.Id })" title="@main_lang.AddDepartmentToDocument" class="btn-link btn-sm">@main_lang.AddDepartmentToDocument</a>

                                    </li>

                                }


                                if (DocumentOperation.GeneralizedDocumentCanDeleteOrEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Edit", "Documents", new { id = item.Id })" title="@main_lang.EditForIndex" class="btn-link btn-sm">@main_lang.EditForIndex</a>

                                    </li>
                                    <li>

                                        <a href="@Url.Action("Index", "DocumentDepartments", new { id = item.Id })" title="@main_lang.DepartmentDocuments" class="btn-link  btn-sm"> @main_lang.DepartmentDocuments </a>

                                    </li>

                                }


                                if (DocumentOperation.GeneralizedDocumentCanDeleteOrEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentGroups", new { id = item.Id })" title="@main_lang.AddGroupsToDocument" class="btn-link btn-sm">@main_lang.AddGroupsToDocument</a>

                                    </li>
                                    <li>

                                        <a href="@Url.Action("Index", "DocumentGroups", new { id = item.Id })" title="@main_lang.DocumentGroups" class="btn-link  btn-sm"> @main_lang.DocumentGroups </a>

                                    </li>
                                }



                                if (DocumentOperation.GeneralizedDocumentCanDeleteOrEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentUsers", new { id = item.Id })" title="@main_lang.AddUsersToDocument" class="btn-link btn-sm">@main_lang.AddUsersToDocument</a>

                                    </li>
                                    <li>

                                        <a href="@Url.Action("Index", "DocumentUsers", new { id = item.Id })" title=" @main_lang.DocumentUsers " class="btn-link  btn-sm"> @main_lang.DocumentUsers </a>


                                    </li>
                                }










                            }
                            else
                            {



                                if (DocumentOperation.DocumentCanDelete(CurrentUserId, item.Id) == true)
                                {
                                    <li>

                                        <a href="#" data-form-id="@item.Id" title=" @main_lang.DocumentDelete" class="btn-link js-Delete btn-sm">@main_lang.DocumentDelete  </a>



                                    </li>
                                }

                                <li>

                                    <a href="@Url.Action("Details", "Documents", new { id = item.Id })" title=" @main_lang.DocumentDetails" class="btn-link js-Details  btn-xs">@main_lang.DocumentDetails </a>

                                </li>


                                if (DocumentOperation.DocumentCanEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentDepartments", new { id = item.Id })" title="@main_lang.AddDepartmentToDocument" class="btn-link btn-sm">  @main_lang.AddDepartmentToDocument</a>

                                    </li>

                                }


                                if (DocumentOperation.DocumentCanEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Edit", "Documents", new { id = item.Id })" title=" @main_lang.EditButton" class="btn-link btn-sm"> @main_lang.EditButton</a>

                                    </li>

                                }
                                <li>

                                    <a href="@Url.Action("Index", "DocumentDepartments", new { id = item.Id })" title="@main_lang.DocumentDepartments" class="btn-link  btn-sm"> @main_lang.DocumentDepartments </a>

                                </li>

                                if (DocumentOperation.DocumentCanEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentGroups", new { id = item.Id })" title="@main_lang.AddGroupsToDocument" class="btn-link btn-sm">@main_lang.AddGroupsToDocument  </a>

                                    </li>
                                }

                                <li>

                                    <a href="@Url.Action("Index", "DocumentGroups", new { id = item.Id })" title="  @main_lang.DocumentGroups" class="btn-link  btn-sm">   @main_lang.DocumentGroups </a>

                                </li>


                                if (DocumentOperation.DocumentCanEdit(CurrentUserId, item.Id))
                                {
                                    <li>

                                        <a href="@Url.Action("Create", "DocumentUsers", new { id = item.Id })" title="  @main_lang.AddUsersToDocument" class="btn-link btn-sm">@main_lang.AddUsersToDocument  </a>

                                    </li>
                                }

                                <li>

                                    <a href="@Url.Action("Index", "DocumentUsers", new { id = item.Id })" title="@main_lang.DocumentUsers" class="btn-link  btn-sm"> @main_lang.DocumentUsers </a>


                                </li>


                                if (item.TypeMailId.HasValue)
                                {
                                    if (item.TypeMail.Type == 2)
                                    {
                                        if (DocumentOperation.DocumentCanEdit(CurrentUserId, item.Id))
                                        {

                                            <li>
                                                <a href="@Url.Action("Create", "DocumentParties", new { id = item.Id })" title=" @main_lang.AddPartiesToDocument " class="btn-link btn-sm"> @main_lang.AddPartiesToDocument</a>
                                            </li>
                                        }
                                        <li>
                                            <a href="@Url.Action("Index", "DocumentParties", new { id = item.Id })" title="@main_lang.DocumentParties " class="btn-link  btn-sm">  @main_lang.DocumentParties </a>
                                        </li>
                                    }
                                }


                            }
                        </ul>
                    </div>


                </td>
            </tr>
            }



        </tbody>


    </table>




</div>

@Html.Partial("_LastView")


<div class="modal fade" tabindex="-1" id="NewModal"
     data-keyboard="true" data-backdrop="static">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">×</button>
                <h4 id="changeText" class="modal-title"></h4>
            </div>
            <div class="modal-body" id="partialPlaceHolder" style="margin-top:30px">

            </div>

        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script>


     $("#FormIdToggle").on("change", function () {


        var id = $(this).val();

        $.ajax({
            url: '@Url.Action("_ExtraSearchFields", "Documents")',
            type: 'GET',
            data: { id: id },
            success: function (partialView) {
                $('#ExtraFieldsPlace').html(partialView);
            }
        });

     });








     $("#btnNewModel").on("click", function () {

        $("#changeText").text('@main_lang.Select_Forms');
        var url = '@Url.Action("form", "Documents")'

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });

    $("#form").on("click", ".js-relate", function () {

        $("#changeText").text('@main_lang.Select_Forms');

        var url = '@Url.Action("RelateDocument", "Documents")'
        url = url + '/' + $(this).attr("data-form-id");

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });

    $("#form").on("click", ".js-replay", function () {

        $("#changeText").text('@main_lang.Select_Forms');

        var url = '@Url.Action("ReplayDocument", "Documents")'
        url = url + '/' + $(this).attr("data-form-id");

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });




    $("#form").on("click", ".js-Delete", function () {

        $("#changeText").text('@main_lang.DeleteElement');

        var url = '@Url.Action("Delete", "Documents")'
        url = url + '/' + $(this).attr("data-form-id");

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });


    $("#form").on("click", ".js-RemoveRelateParent", function () {

        $("#changeText").text('@main_lang.RemoveParentRate');

        var url = '@Url.Action("RemoveParentRate", "Documents")'
        url = url + '/' + $(this).attr("data-form-id");

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });




    $("#form").on("click", ".js-RemoveRelateChild", function () {

        $("#changeText").text('@main_lang.RemoveChildRate');

        var url = '@Url.Action("RemoveChildRate", "Documents")'
        url = url + '/' + $(this).attr("data-form-id");

        $("#partialPlaceHolder").load(url, function () {
            $('#NewModal').modal('show');
        });
    });




    $("#btnRefreshModel").on("click", function () {
        window.location.replace('@Url.Action("Index","Documents",new { Id="none"})');
    });



</script>



<style>

    #RetrievalCount {
        margin-right: 15px;
    }

    .form-control {
        margin: 5px;
        height: 40px;
        border-radius: 0;
        width: 100%;
    }

    a:hover {
        color: blue;
        text-decoration-line: underline;
    }
</style>
